[{"content":"","date":"2025-03-26T21:44:16+08:00","permalink":"https://IAmYuanyu.github.io/p/%E8%A7%A3%E5%86%B3git%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/","title":"解决git上传代码报错"},{"content":"参考视频：\n【【雷】Hugo + Github免费搭建博客，并实现自动化部署】 https://www.bilibili.com/video/BV1bovfeaEtQ/?share_source=copy_web\u0026vd_source=6b5118a5d5b29a140a6c9241c8cdd612\n下载HUGO HUGO官网：https://gohugo.io/\n在cmd中输入hugo new site 要创建文件夹的名字\n7.若配置了hugo的全局环境变量则无需执行copy命令，若不知道是否配置，则与图中操作一样\n下载网页主题并启动 8.到这一步后，先把cmd窗口放到后台，别关掉，重新打开hugo官网\n14.下载好主题后，把主题压缩包解压到hugo的themes文件夹中\n15.打开下载的hugo-theme-stack-3.30.0文件夹，再打开其中的exampleSite文件夹\n17.粘贴到hugo的dev文件夹下\n18.删掉hugo.toml，因为刚刚复制的hugo.yaml与其作用是一致的，相当于已经配置好了的hugo.toml\n19.然后打开刚刚复制过来的content文件夹，再打开之中的post文件夹\n20.因为rich-content中有引用国外网站，可能会导致之后无法启动网页\n21.回到dev文件夹\n23.此时已经可以启动网页了，点开步骤8时放在后台的cmd窗口，输入hugo server -D（其实就是官方提示的命令hugo server --buildDrafts的缩写）\n24.注意别关闭cmd窗口，关闭后就打不开下方网页了\n创建第一个博客 25.网页启动后可以在cmd窗口用快捷键Ctrl+C结束网页，此时就可以继续输入命令了。\n输入hugo new content post/myFirstBlog/index.md创建新内容\n26.在cmd窗口输入hugo server -D，重新启动网页\n27.Hugo的默认根路径在在static文件夹，所以要注意修改笔记中图片的路径\nstack主题配置 见参考视频\nGithub常规部署 28.下载Git：https://git-scm.com/downloads/win\n29.登录Github：https://github.com/\n若Github要2FA验证，可以下载下方插件\n下载方式如下\n使用方式：\n30.创建仓库，创建后出现的页面别关掉\n31.修改hugo.yaml中baseurl\n32.打开dev中的public文件夹，在路径处输入cmd\n补充（非必要，可不看）：可以先删掉public文件夹，再在cmd窗口输入hugo -D重新生成一个public文件夹。因为在配置主题的时候可能会把很多没必要的地方删掉，而删掉的部分仍留在public中，这时就可以用hugo -D重新生成一次静态页面\n33.然后在cmd窗口依次输入git init、git add .、git commit -m \u0026quot;first commit\u0026quot;、git branch -M main、git remote add origin https://github.com/xxx/xxx.github.io.git（这里填你自己的仓库地址）、git push -u origin main，中间输出部分太长，就不放在图中了\n34.如果和图中一样说明部署完成了\nGithub自动部署 自动部署仅限于使用hugo new content命令时会更新网页，其他时候，如删除、修改文件时并不会实时同步本地文件，自行选择是否配置\n35.再创建一个仓库\n36.打开dev文件夹，创建一个.gitignore文件，内容如图（不会创建.gitignore文件，就在此处打开cmd窗口，输入type nul\u0026gt;.gitignore即可）\n37.在dev文件夹打开cmd窗口，再执行一次和步骤33一样的操作（git remote add origin https://……命令记得换成hugo-main的仓库地址）\n38.返回Github首页\n42.将token配置为hugo-main仓库的环境变量\n44.回到dev文件夹，创建.github/workflows/\n45.打开workflows文件夹，创建一个随意取个名.yaml文件，此处叫hugo_deploy.yaml，不会创建可以用图中命令type nul\u0026gt;hugo_deploy.yaml\n46.将下方内容赋值到创建的hugo_deploy.yaml中\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 name: deploy # 代码提交到main分支时触发github action on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Web run: hugo -D - name: Deploy Web uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.你的token变量名 }} EXTERNAL_REPOSITORY: 你的github名/你的仓库名 PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: auto deploy 47.再次回到dev文件夹，打开cmd窗口，依次输入git add .、git commit -m \u0026quot;update25-3-26-20:00\u0026quot;（双引号内写什么无所谓）、git push，输完命令后就完成了自动化部署\n","date":"2025-03-26T14:52:51+08:00","image":"https://IAmYuanyu.github.io/p/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://IAmYuanyu.github.io/p/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"Hugo+Github搭建个人博客"}]